---

# from repo
- block:
    - name: "haproxy | download HAProxy and lua source files"
      get_url:
        url: '{{ item }}'
        dest: /tmp/
        timeout: 120
        validate_certs: no
      loop:
        - '{{ haproxy_package_repo }}'
        - '{{ lua_package_repo }}'
      environment: '{{ proxy_env | default({}) }}'

    - name: "haproxy | extract HAProxy source files into /tmp"
      unarchive:
        src: '/tmp/{{ haproxy_package_repo | basename }}'
        dest: /tmp/
        remote_src: yes
      when: haproxy_package_repo | length > 0

    - name: "haproxy | extract lua source files into /tmp"
      unarchive:
        src: '/tmp/{{ lua_package_repo | basename }}'
        dest: /tmp/
        remote_src: yes
      when: lua_package_repo | length > 0
      tags: lua
  when: installation_method == "repo"
  tags: haproxy

# from file
- block:
    - name: "haproxy | extract HAProxy source files into /tmp"
      unarchive:
        src: '{{ haproxy_package_file }}'
        dest: /tmp/
      when: haproxy_package_file | length > 0

    - name: "haproxy | extract lua source files into /tmp"
      unarchive:
        src: '{{ lua_package_file }}'
        dest: /tmp/
      when: lua_package_file | length > 0
      tags: lua
  when: installation_method == "file"
  tags: haproxy

- name: haproxy | install the prerequisites packages to compile HAProxy
  package:
    name: "{{ haproxy_compile_requirements }}"
    state: present
  environment: '{{ proxy_env | default({}) }}'
  tags: [ haproxy, haproxy_requirements ]

- name: haproxy | add haproxy group
  group:
    name: haproxy
    state: present
  tags: haproxy

- name: haproxy | add haproxy user
  user:
    name: haproxy
    comment: "HAProxy user"
    group: haproxy
    shell: /usr/sbin/nologin
  tags: haproxy

- name: haproxy | create directories
  file:
    dest: "{{ item }}"
    state: directory
    owner: haproxy
    group: haproxy
  loop:
    - /etc/haproxy
    - /var/run/haproxy
    - /var/lib/haproxy/dev
  tags: haproxy

# Build and install HAproxy from source
- block:
    - name: haproxy | build and install lua (required for haproxy)
      become: yes
      become_user: root
      shell: "make INSTALL_TOP=/opt/{{ lua_package_repo.split('.tar.gz')[0] | basename }} linux install"
      args:
        chdir: "/tmp/{{ lua_package_repo.split('.tar.gz')[0] | basename }}"
      tags: lua

    - name: haproxy | build HAProxy
      become: yes
      become_user: root
      make:
        chdir: "/tmp/{{ haproxy_package_repo.split('.tar.gz')[0] | basename }}"
        params:
          TARGET: linux2628
          USE_GETADDRINFO: 1
          USE_ZLIB: 1
          USE_REGPARM: 1
          USE_OPENSSL: 1
          USE_LIBCRYPT: 1
          USE_SYSTEMD: 1
          USE_PCRE: 1
          USE_NS: 1
          USE_TFO: 1
          USE_LUA: 1
          LUA_INC: "/opt/{{ lua_package_repo.split('.tar.gz')[0] | basename }}/include"
          LUA_LIB: "/opt/{{ lua_package_repo.split('.tar.gz')[0] | basename }}/lib"

    - name: haproxy | install HAProxy
      become: yes
      become_user: root
      make:
        chdir: "/tmp/{{ haproxy_package_repo.split('.tar.gz')[0] | basename }}"
        target: install
  when: installation_method == "repo"
  tags: haproxy

# installation_method: "file"
- block:
    - name: haproxy | build and install lua (required for haproxy)
      become: yes
      become_user: root
      shell: "make INSTALL_TOP=/opt/{{ lua_package_file.split('.tar.gz')[0] | basename }} linux install"
      args:
        chdir: "/tmp/{{ lua_package_file.split('.tar.gz')[0] | basename }}"
      tags: lua

    - name: haproxy | build HAProxy
      become: yes
      become_user: root
      make:
        chdir: "/tmp/{{ haproxy_package_file.split('.tar.gz')[0] | basename }}"
        params:
          TARGET: linux2628
          USE_GETADDRINFO: 1
          USE_ZLIB: 1
          USE_REGPARM: 1
          USE_OPENSSL: 1
          USE_LIBCRYPT: 1
          USE_SYSTEMD: 1
          USE_PCRE: 1
          USE_NS: 1
          USE_TFO: 1
          USE_LUA: 1
          LUA_INC: "/opt/{{ lua_package_file.split('.tar.gz')[0] | basename }}/include"
          LUA_LIB: "/opt/{{ lua_package_file.split('.tar.gz')[0] | basename }}/lib"

    - name: haproxy | install HAProxy
      become: yes
      become_user: root
      make:
        chdir: "/tmp/{{ haproxy_package_file.split('.tar.gz')[0] | basename }}"
        target: install
  when: installation_method == "file"
  tags: haproxy

- name: haproxy | create systemd service file
  template:
    src: templates/haproxy.service.j2
    dest: /etc/systemd/system/haproxy.service
    owner: haproxy
    group: haproxy
  tags: [ haproxy, haproxy_service ]

- name: haproxy | generate conf file "/etc/haproxy/haproxy.cfg"
  template:
    src: templates/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  register: haproxy_conf_result
  tags: [ haproxy, haproxy_conf ]

- name: haproxy | restart systemd service
  systemd:
    daemon_reload: yes
    name: haproxy
    enabled: yes
    state: restarted
  register: haproxy_restart_result
  when: haproxy_conf_result.changed
  tags: [ haproxy, haproxy_conf ]

- name: haproxy | check HAProxy is started and accepting connections
  wait_for:
    port: 7000
    host: "{{ hostvars[inventory_hostname]['inventory_hostname'] }}"
    state: started
    timeout: 120
    delay: 10
  ignore_errors: no
  when: haproxy_restart_result.changed
  tags: [ haproxy, haproxy_conf ]

 # for automate the haproxy configuration (optional)
- import_tasks: ../tasks/confd.yml
  when: dcs_type == "etcd"
  tags: confd

  # virtual ip address (and haproxy health checking)
- import_tasks: ../tasks/keepalived.yml
  tags: keepalived
