---

- block:
    - name: check postgresql cluster health
      run_once: true
      become: true
      become_user: postgres
      command: patronictl -c /etc/patroni/patroni.yml list
      register: patronictl_result
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/bin:/usr/local/bin"
      changed_when: false

    - name: PostgreSQL Cluster health
      run_once: true
      debug:
        var: patronictl_result.stdout_lines
  ignore_errors: true
  tags: patroni_status

- block:
    - name: get postgresql database list
      run_once: true
      command:
        "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port }} -U postgres -c
        \"
          SELECT
          d.datname as name,
          pg_get_userbyid(d.datdba) as owner,
          pg_encoding_to_char(d.encoding) as encoding,
          d.datcollate as collate,
          d.datctype as ctype,
          CASE
          WHEN has_database_privilege(d.datname, 'CONNECT')
          THEN pg_size_pretty(pg_database_size(d.datname))
          ELSE 'No Access'
          END
          size,
          t.spcname as tablespace
          FROM pg_catalog.pg_database d
          JOIN pg_catalog.pg_tablespace t
          ON d.dattablespace = t.oid
          WHERE NOT datistemplate
          ORDER BY 1
        \""
      register: dbs_result
      delegate_to: "{{ groups.master[0] }}"
      changed_when: false

    - name: PostgreSQL list of databases
      run_once: true
      debug:
        var: dbs_result.stdout_lines
  ignore_errors: true
  tags: databases, db_list

- block:
    - name: PostgreSQL Cluster connection info
      run_once: true
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port 5000 (read/write) master
          - port 5001 (read only)  all replicas
          - port 5002 (read only)  synchronous replica only
          - port 5003 (read only)  asynchronous replicas only
          - +------------------------------------------------+
      when: with_haproxy_load_balancing == "true" and
            synchronous_mode == "true"

    - name: PostgreSQL Cluster connection info
      run_once: true
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port 5000 (read/write) master
          - port 5001 (read only)  all replicas
          - +------------------------------------------------+
      when: with_haproxy_load_balancing == "true" and
            synchronous_mode != "true"

    - name: PostgreSQL Cluster connection info
      run_once: true
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port {{ pgbouncer_listen_port }} (pgbouncer)
          - +------------------------------------------------+
      when: with_haproxy_load_balancing == "false" and
            install_pgbouncer == "true"

    - name: PostgreSQL Cluster connection info
      run_once: true
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port {{ postgresql_port }}
          - +------------------------------------------------+
      when: with_haproxy_load_balancing == "false" and
            install_pgbouncer != "true"
  when: cluster_vip is defined and cluster_vip | length > 0
  ignore_errors: true
  tags: conn_info

- block:
    - name: get vip info
      set_fact:
        man_ip: "{{ item }}"
      loop: "{{ ansible_all_ipv4_addresses }}"
      when: item == cluster_vip

    - name: Virtual IP Address (VIP) info
      debug:
        msg:
          "Cluster ip address (VIP) {{ cluster_vip }}
           is running on server {{ ansible_hostname }}"
      when: man_ip is defined and man_ip == cluster_vip
  when: cluster_vip is defined and cluster_vip | length > 0
  ignore_errors: true
  tags: vip_owner, vip_status

...
